// Top-level build file where you can add configuration options common to all sub-projects/modules.

// Applies the AppDynamics build time instrumentation plugin.
// This should be placed at the top of your top-level build.gradle file.
// apply from: '../node_modules/@appdynamics/react-native-agent/android/adeum.gradle'

// Applies the AppDynamics build time instrumentation plugin.
// This should be placed at the top of your top-level build.gradle file.
apply from: '../node_modules/@appdynamics/react-native-agent/android/adeum.gradle'

buildscript {
    ext {
        kotlinVersion = "1.9.0" 
        buildToolsVersion = "33.0.0"
        minSdkVersion = 24
        compileSdkVersion = 33
        targetSdkVersion = 33
        ndkVersion = "23.1.7779620"
        googlePlayServicesAuthVersion = "16.0.1" // <--- use this version or newer
        playServicesLocationVersion = "21.0.1"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        // classpath("com.android.tools.build:gradle:4.2.2") //v3signing
        classpath("com.android.tools.build:gradle")
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath 'com.google.firebase:perf-plugin:1.4.1'
        //classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10" 
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

subprojects { subproject ->
        if(project['name'] == 'react-native-reanimated'){
            project.configurations { compile { } }
        }
}

subprojects { subproject ->
        afterEvaluate{
            if((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
                android {
                    compileSdkVersion rootProject.ext.compileSdkVersion
                    buildToolsVersion rootProject.ext.buildToolsVersion
                }
            }
        }
    }


allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        maven {
        url "http://maven.microblink.com"
        allowInsecureProtocol = true
        }
        maven {
            url "https://s3-us-west-2.amazonaws.com/si-mobile-sdks/android/"
        }
    }
}
